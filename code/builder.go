package code

import "gentable/base"

const Warning = "Code generated by gentable. DO NOT EDIT."

func init() {
	Add(&GoBuilder{})
}

var gBuilderMap = make(map[string]Builder)

func Add(builder Builder) {
	gBuilderMap[builder.Type()] = builder
}

func Get(name string) Builder {
	return gBuilderMap[name]
}

// Builder 构建代码,
// c++需要输出h和cpp文件,
// 而golang等其他语言一个文件即可
// go需要制定package名字
// 不同语言需要提供加载不同数据格式的代码
// 加载代码不应该依赖路径
// 支持重复加载,相同ID的数据指针应该不能发生变化
// TODO:通过参数配置,强制第一列都生成ID映射?
type Builder interface {
	Type() string
	Build(sheet *base.Sheet, format string, opts *Options) error
	BuildAll(sheets []*base.Sheet, format string, opts *Options) error
}

type Options struct {
	GoPkg string // go代码包名
}

func (o *Options) GetPkg() string {
	if o.GoPkg == "" {
		return "tbl"
	}

	return o.GoPkg
}
